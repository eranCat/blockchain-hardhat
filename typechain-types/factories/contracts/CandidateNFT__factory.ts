/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CandidateNFT,
  CandidateNFTInterface,
} from "../../contracts/CandidateNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "numerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "ERC2981InvalidDefaultRoyalty",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC2981InvalidDefaultRoyaltyReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "ERC2981InvalidTokenRoyalty",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC2981InvalidTokenRoyaltyReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getOwnerHistory",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600160095534801561001557600080fd5b50604051613222380380613222833981810160405281019061003791906104a1565b806040518060400160405280600c81526020017f43616e6469646174654e465400000000000000000000000000000000000000008152506040518060400160405280600481526020017f434e46540000000000000000000000000000000000000000000000000000000081525081600090816100b3919061071e565b5080600190816100c3919061071e565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101385760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012f91906107ff565b60405180910390fd5b610147816101c660201b60201c565b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101ae576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101c0816103e861028c60201b60201c565b5061089b565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600061029c61043460201b60201c565b6bffffffffffffffffffffffff16905080826bffffffffffffffffffffffff1611156103015781816040517f6f483d090000000000000000000000000000000000000000000000000000000081526004016102f8929190610872565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103735760006040517fb6d9900a00000000000000000000000000000000000000000000000000000000815260040161036a91906107ff565b60405180910390fd5b60405180604001604052808473ffffffffffffffffffffffffffffffffffffffff168152602001836bffffffffffffffffffffffff16815250600660008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550905050505050565b6000612710905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061046e82610443565b9050919050565b61047e81610463565b811461048957600080fd5b50565b60008151905061049b81610475565b92915050565b6000602082840312156104b7576104b661043e565b5b60006104c58482850161048c565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061054f57607f821691505b60208210810361056257610561610508565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026105ca7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261058d565b6105d4868361058d565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061061b610616610611846105ec565b6105f6565b6105ec565b9050919050565b6000819050919050565b61063583610600565b61064961064182610622565b84845461059a565b825550505050565b600090565b61065e610651565b61066981848461062c565b505050565b5b8181101561068d57610682600082610656565b60018101905061066f565b5050565b601f8211156106d2576106a381610568565b6106ac8461057d565b810160208510156106bb578190505b6106cf6106c78561057d565b83018261066e565b50505b505050565b600082821c905092915050565b60006106f5600019846008026106d7565b1980831691505092915050565b600061070e83836106e4565b9150826002028217905092915050565b610727826104ce565b67ffffffffffffffff8111156107405761073f6104d9565b5b61074a8254610537565b610755828285610691565b600060209050601f8311600181146107885760008415610776578287015190505b6107808582610702565b8655506107e8565b601f19841661079686610568565b60005b828110156107be57848901518255600182019150602085019450602081019050610799565b868310156107db57848901516107d7601f8916826106e4565b8355505b6001600288020188555050505b505050505050565b6107f981610463565b82525050565b600060208201905061081460008301846107f0565b92915050565b60006bffffffffffffffffffffffff82169050919050565b600061084d6108486108438461081a565b6105f6565b6105ec565b9050919050565b61085d81610832565b82525050565b61086c816105ec565b82525050565b60006040820190506108876000830185610854565b6108946020830184610863565b9392505050565b612978806108aa6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063b88d4fde11610071578063b88d4fde1461031b578063c87b56dd14610337578063d0def52114610367578063e985e9c514610397578063f2fde38b146103c757610121565b806370a0823114610289578063715018a6146102b95780638da5cb5b146102c357806395d89b41146102e1578063a22cb465146102ff57610121565b806314ae108d116100f457806314ae108d146101c057806323b872dd146101f05780632a55205a1461020c57806342842e0e1461023d5780636352211e1461025957610121565b806301ffc9a71461012657806306fdde0314610156578063081812fc14610174578063095ea7b3146101a4575b600080fd5b610140600480360381019061013b9190611c9d565b6103e3565b60405161014d9190611ce5565b60405180910390f35b61015e6103f5565b60405161016b9190611d90565b60405180910390f35b61018e60048036038101906101899190611de8565b610487565b60405161019b9190611e56565b60405180910390f35b6101be60048036038101906101b99190611e9d565b6104a3565b005b6101da60048036038101906101d59190611de8565b6104b9565b6040516101e79190611f9b565b60405180910390f35b61020a60048036038101906102059190611fbd565b610564565b005b61022660048036038101906102219190612010565b610666565b60405161023492919061205f565b60405180910390f35b61025760048036038101906102529190611fbd565b610796565b005b610273600480360381019061026e9190611de8565b6107b6565b6040516102809190611e56565b60405180910390f35b6102a3600480360381019061029e9190612088565b6107c8565b6040516102b091906120b5565b60405180910390f35b6102c1610882565b005b6102cb610896565b6040516102d89190611e56565b60405180910390f35b6102e96108c0565b6040516102f69190611d90565b60405180910390f35b610319600480360381019061031491906120fc565b610952565b005b61033560048036038101906103309190612271565b610968565b005b610351600480360381019061034c9190611de8565b61098d565b60405161035e9190611d90565b60405180910390f35b610381600480360381019061037c9190612395565b610a3c565b60405161038e91906120b5565b60405180910390f35b6103b160048036038101906103ac91906123f1565b610b6a565b6040516103be9190611ce5565b60405180910390f35b6103e160048036038101906103dc9190612088565b610bfe565b005b60006103ee82610c84565b9050919050565b60606000805461040490612460565b80601f016020809104026020016040519081016040528092919081815260200182805461043090612460565b801561047d5780601f106104525761010080835404028352916020019161047d565b820191906000526020600020905b81548152906001019060200180831161046057829003601f168201915b5050505050905090565b600061049282610cfe565b5061049c82610d86565b9050919050565b6104b582826104b0610dc3565b610dcb565b5050565b60606104c482610cfe565b50600b600083815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561055857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161050e575b50505050509050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105d65760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105cd9190611e56565b60405180910390fd5b60006105ea83836105e5610dc3565b610ddd565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610660578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161065793929190612491565b60405180910390fd5b50505050565b600080600060076000868152602001908152602001600020905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008260000160149054906101000a90046bffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361074757600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150600660000160149054906101000a90046bffffffffffffffffffffffff1690505b6000610751610f14565b6bffffffffffffffffffffffff16826bffffffffffffffffffffffff168861077991906124f7565b6107839190612568565b9050828195509550505050509250929050565b6107b183838360405180602001604052806000815250610968565b505050565b60006107c182610cfe565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361083b5760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016108329190611e56565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61088a610f1e565b6108946000610fa5565b565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546108cf90612460565b80601f01602080910402602001604051908101604052809291908181526020018280546108fb90612460565b80156109485780601f1061091d57610100808354040283529160200191610948565b820191906000526020600020905b81548152906001019060200180831161092b57829003601f168201915b5050505050905090565b61096461095d610dc3565b838361106b565b5050565b610973848484610564565b61098761097e610dc3565b858585856111da565b50505050565b606061099882610cfe565b50600a600083815260200190815260200160002080546109b790612460565b80601f01602080910402602001604051908101604052809291908181526020018280546109e390612460565b8015610a305780601f10610a0557610100808354040283529160200191610a30565b820191906000526020600020905b815481529060010190602001808311610a1357829003601f168201915b50505050509050919050565b6000610a46610f1e565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610aac576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60096000815480929190610abf90612599565b919050559050610acf838261138b565b81600a60008381526020019081526020016000209081610aef919061278d565b50600b6000828152602001908152602001600020839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610c06610f1e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c785760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c6f9190611e56565b60405180910390fd5b610c8181610fa5565b50565b60007f2a55205a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610cf75750610cf6826113a9565b5b9050919050565b600080610d0a8361148b565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d7d57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610d7491906120b5565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610dd883838360016114c8565b505050565b6000610dea84848461168d565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e6357600a60008481526020019081526020016000206000610e3f9190611bb3565b600b60008481526020019081526020016000206000610e5e9190611bf3565b610f0d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f0c57600b6000848152602001908152602001600020849080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b9392505050565b6000612710905090565b610f26610dc3565b73ffffffffffffffffffffffffffffffffffffffff16610f44610896565b73ffffffffffffffffffffffffffffffffffffffff1614610fa357610f67610dc3565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f9a9190611e56565b60405180910390fd5b565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110dc57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016110d39190611e56565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111cd9190611ce5565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611384578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b815260040161123994939291906128b4565b6020604051808303816000875af192505050801561127557506040513d601f19601f820116820180604052508101906112729190612915565b60015b6112f9573d80600081146112a5576040519150601f19603f3d011682016040523d82523d6000602084013e6112aa565b606091505b5060008151036112f157836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112e89190611e56565b60405180910390fd5b805160208201fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461138257836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113799190611e56565b60405180910390fd5b505b5050505050565b6113a58282604051806020016040528060008152506118a7565b5050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061147457507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806114845750611483826118cb565b5b9050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806115015750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561163557600061151184610cfe565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561157c57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561158f575061158d8184610b6a565b155b156115d157826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016115c89190611e56565b60405180910390fd5b811561163357838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6000806116998461148b565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146116db576116da818486611935565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461176c5761171d6000856000806114c8565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146117ef576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6118b183836119f9565b6118c66118bc610dc3565b60008585856111da565b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611940838383611af2565b6119f457600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036119b557806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016119ac91906120b5565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016119eb92919061205f565b60405180910390fd5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a6b5760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611a629190611e56565b60405180910390fd5b6000611a7983836000610ddd565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611aed5760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611ae49190611e56565b60405180910390fd5b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611baa57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611b6b5750611b6a8484610b6a565b5b80611ba957508273ffffffffffffffffffffffffffffffffffffffff16611b9183610d86565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b508054611bbf90612460565b6000825580601f10611bd15750611bf0565b601f016020900490600052602060002090810190611bef9190611c14565b5b50565b5080546000825590600052602060002090810190611c119190611c14565b50565b5b80821115611c2d576000816000905550600101611c15565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611c7a81611c45565b8114611c8557600080fd5b50565b600081359050611c9781611c71565b92915050565b600060208284031215611cb357611cb2611c3b565b5b6000611cc184828501611c88565b91505092915050565b60008115159050919050565b611cdf81611cca565b82525050565b6000602082019050611cfa6000830184611cd6565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611d3a578082015181840152602081019050611d1f565b60008484015250505050565b6000601f19601f8301169050919050565b6000611d6282611d00565b611d6c8185611d0b565b9350611d7c818560208601611d1c565b611d8581611d46565b840191505092915050565b60006020820190508181036000830152611daa8184611d57565b905092915050565b6000819050919050565b611dc581611db2565b8114611dd057600080fd5b50565b600081359050611de281611dbc565b92915050565b600060208284031215611dfe57611dfd611c3b565b5b6000611e0c84828501611dd3565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e4082611e15565b9050919050565b611e5081611e35565b82525050565b6000602082019050611e6b6000830184611e47565b92915050565b611e7a81611e35565b8114611e8557600080fd5b50565b600081359050611e9781611e71565b92915050565b60008060408385031215611eb457611eb3611c3b565b5b6000611ec285828601611e88565b9250506020611ed385828601611dd3565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611f1281611e35565b82525050565b6000611f248383611f09565b60208301905092915050565b6000602082019050919050565b6000611f4882611edd565b611f528185611ee8565b9350611f5d83611ef9565b8060005b83811015611f8e578151611f758882611f18565b9750611f8083611f30565b925050600181019050611f61565b5085935050505092915050565b60006020820190508181036000830152611fb58184611f3d565b905092915050565b600080600060608486031215611fd657611fd5611c3b565b5b6000611fe486828701611e88565b9350506020611ff586828701611e88565b925050604061200686828701611dd3565b9150509250925092565b6000806040838503121561202757612026611c3b565b5b600061203585828601611dd3565b925050602061204685828601611dd3565b9150509250929050565b61205981611db2565b82525050565b60006040820190506120746000830185611e47565b6120816020830184612050565b9392505050565b60006020828403121561209e5761209d611c3b565b5b60006120ac84828501611e88565b91505092915050565b60006020820190506120ca6000830184612050565b92915050565b6120d981611cca565b81146120e457600080fd5b50565b6000813590506120f6816120d0565b92915050565b6000806040838503121561211357612112611c3b565b5b600061212185828601611e88565b9250506020612132858286016120e7565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61217e82611d46565b810181811067ffffffffffffffff8211171561219d5761219c612146565b5b80604052505050565b60006121b0611c31565b90506121bc8282612175565b919050565b600067ffffffffffffffff8211156121dc576121db612146565b5b6121e582611d46565b9050602081019050919050565b82818337600083830152505050565b600061221461220f846121c1565b6121a6565b9050828152602081018484840111156122305761222f612141565b5b61223b8482856121f2565b509392505050565b600082601f8301126122585761225761213c565b5b8135612268848260208601612201565b91505092915050565b6000806000806080858703121561228b5761228a611c3b565b5b600061229987828801611e88565b94505060206122aa87828801611e88565b93505060406122bb87828801611dd3565b925050606085013567ffffffffffffffff8111156122dc576122db611c40565b5b6122e887828801612243565b91505092959194509250565b600067ffffffffffffffff82111561230f5761230e612146565b5b61231882611d46565b9050602081019050919050565b6000612338612333846122f4565b6121a6565b90508281526020810184848401111561235457612353612141565b5b61235f8482856121f2565b509392505050565b600082601f83011261237c5761237b61213c565b5b813561238c848260208601612325565b91505092915050565b600080604083850312156123ac576123ab611c3b565b5b60006123ba85828601611e88565b925050602083013567ffffffffffffffff8111156123db576123da611c40565b5b6123e785828601612367565b9150509250929050565b6000806040838503121561240857612407611c3b565b5b600061241685828601611e88565b925050602061242785828601611e88565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061247857607f821691505b60208210810361248b5761248a612431565b5b50919050565b60006060820190506124a66000830186611e47565b6124b36020830185612050565b6124c06040830184611e47565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061250282611db2565b915061250d83611db2565b925082820261251b81611db2565b91508282048414831517612532576125316124c8565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061257382611db2565b915061257e83611db2565b92508261258e5761258d612539565b5b828204905092915050565b60006125a482611db2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036125d6576125d56124c8565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026126437fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612606565b61264d8683612606565b95508019841693508086168417925050509392505050565b6000819050919050565b600061268a61268561268084611db2565b612665565b611db2565b9050919050565b6000819050919050565b6126a48361266f565b6126b86126b082612691565b848454612613565b825550505050565b600090565b6126cd6126c0565b6126d881848461269b565b505050565b5b818110156126fc576126f16000826126c5565b6001810190506126de565b5050565b601f82111561274157612712816125e1565b61271b846125f6565b8101602085101561272a578190505b61273e612736856125f6565b8301826126dd565b50505b505050565b600082821c905092915050565b600061276460001984600802612746565b1980831691505092915050565b600061277d8383612753565b9150826002028217905092915050565b61279682611d00565b67ffffffffffffffff8111156127af576127ae612146565b5b6127b98254612460565b6127c4828285612700565b600060209050601f8311600181146127f757600084156127e5578287015190505b6127ef8582612771565b865550612857565b601f198416612805866125e1565b60005b8281101561282d57848901518255600182019150602085019450602081019050612808565b8683101561284a5784890151612846601f891682612753565b8355505b6001600288020188555050505b505050505050565b600081519050919050565b600082825260208201905092915050565b60006128868261285f565b612890818561286a565b93506128a0818560208601611d1c565b6128a981611d46565b840191505092915050565b60006080820190506128c96000830187611e47565b6128d66020830186611e47565b6128e36040830185612050565b81810360608301526128f5818461287b565b905095945050505050565b60008151905061290f81611c71565b92915050565b60006020828403121561292b5761292a611c3b565b5b600061293984828501612900565b9150509291505056fea2646970667358221220465191569eeddf72c075d445cd4fbadb5d2f1477579b4edd1d1ef2928cf12d1b64736f6c634300081e0033";

type CandidateNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CandidateNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CandidateNFT__factory extends ContractFactory {
  constructor(...args: CandidateNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_initialOwner, overrides || {});
  }
  override deploy(
    _initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_initialOwner, overrides || {}) as Promise<
      CandidateNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CandidateNFT__factory {
    return super.connect(runner) as CandidateNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CandidateNFTInterface {
    return new Interface(_abi) as CandidateNFTInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CandidateNFT {
    return new Contract(address, _abi, runner) as unknown as CandidateNFT;
  }
}
