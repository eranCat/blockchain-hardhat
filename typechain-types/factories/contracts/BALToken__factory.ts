/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { BALToken, BALTokenInterface } from "../../contracts/BALToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "UnauthorizedMinter",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousMinter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newMinter",
        type: "address",
      },
    ],
    name: "MinterUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611bb7380380611bb7833981810160405281019061003291906103e0565b8083838160039081610044919061068c565b508060049081610054919061068c565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c95760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100c0919061076d565b60405180910390fd5b6100d88161014760201b60201c565b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361013f576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050610788565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102748261022b565b810181811067ffffffffffffffff821117156102935761029261023c565b5b80604052505050565b60006102a661020d565b90506102b2828261026b565b919050565b600067ffffffffffffffff8211156102d2576102d161023c565b5b6102db8261022b565b9050602081019050919050565b60005b838110156103065780820151818401526020810190506102eb565b60008484015250505050565b6000610325610320846102b7565b61029c565b90508281526020810184848401111561034157610340610226565b5b61034c8482856102e8565b509392505050565b600082601f83011261036957610368610221565b5b8151610379848260208601610312565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103ad82610382565b9050919050565b6103bd816103a2565b81146103c857600080fd5b50565b6000815190506103da816103b4565b92915050565b6000806000606084860312156103f9576103f8610217565b5b600084015167ffffffffffffffff8111156104175761041661021c565b5b61042386828701610354565b935050602084015167ffffffffffffffff8111156104445761044361021c565b5b61045086828701610354565b9250506040610461868287016103cb565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806104bd57607f821691505b6020821081036104d0576104cf610476565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026105387fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826104fb565b61054286836104fb565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061058961058461057f8461055a565b610564565b61055a565b9050919050565b6000819050919050565b6105a38361056e565b6105b76105af82610590565b848454610508565b825550505050565b600090565b6105cc6105bf565b6105d781848461059a565b505050565b5b818110156105fb576105f06000826105c4565b6001810190506105dd565b5050565b601f82111561064057610611816104d6565b61061a846104eb565b81016020851015610629578190505b61063d610635856104eb565b8301826105dc565b50505b505050565b600082821c905092915050565b600061066360001984600802610645565b1980831691505092915050565b600061067c8383610652565b9150826002028217905092915050565b6106958261046b565b67ffffffffffffffff8111156106ae576106ad61023c565b5b6106b882546104a5565b6106c38282856105ff565b600060209050601f8311600181146106f657600084156106e4578287015190505b6106ee8582610670565b865550610756565b601f198416610704866104d6565b60005b8281101561072c57848901518255600182019150602085019450602081019050610707565b868310156107495784890151610745601f891682610652565b8355505b6001600288020188555050505b505050505050565b610767816103a2565b82525050565b6000602082019050610782600083018461075e565b92915050565b611420806107976000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb14610264578063dd62ed3e14610294578063f2fde38b146102c4578063fca3b5aa146102e0576100f5565b806370a08231146101ee578063715018a61461021e5780638da5cb5b1461022857806395d89b4114610246576100f5565b806318160ddd116100d357806318160ddd1461016657806323b872dd14610184578063313ce567146101b457806340c10f19146101d2576100f5565b806306fdde03146100fa5780630754617214610118578063095ea7b314610136575b600080fd5b6101026102fc565b60405161010f9190611074565b60405180910390f35b61012061038e565b60405161012d91906110d7565b60405180910390f35b610150600480360381019061014b9190611159565b6103b4565b60405161015d91906111b4565b60405180910390f35b61016e6103d7565b60405161017b91906111de565b60405180910390f35b61019e600480360381019061019991906111f9565b6103e1565b6040516101ab91906111b4565b60405180910390f35b6101bc610410565b6040516101c99190611268565b60405180910390f35b6101ec60048036038101906101e79190611159565b610419565b005b61020860048036038101906102039190611283565b610560565b60405161021591906111de565b60405180910390f35b6102266105a8565b005b6102306105bc565b60405161023d91906110d7565b60405180910390f35b61024e6105e6565b60405161025b9190611074565b60405180910390f35b61027e60048036038101906102799190611159565b610678565b60405161028b91906111b4565b60405180910390f35b6102ae60048036038101906102a991906112b0565b61069b565b6040516102bb91906111de565b60405180910390f35b6102de60048036038101906102d99190611283565b610722565b005b6102fa60048036038101906102f59190611283565b6107a8565b005b60606003805461030b9061131f565b80601f01602080910402602001604051908101604052809291908181526020018280546103379061131f565b80156103845780601f1061035957610100808354040283529160200191610384565b820191906000526020600020905b81548152906001019060200180831161036757829003601f168201915b5050505050905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806103bf610876565b90506103cc81858561087e565b600191505092915050565b6000600254905090565b6000806103ec610876565b90506103f9858285610890565b610404858585610925565b60019150509392505050565b60006012905090565b6104216105bc565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156104aa5750600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b156104ec57336040517fa4f396650000000000000000000000000000000000000000000000000000000081526004016104e391906110d7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610552576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61055c8282610a19565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6105b0610a9b565b6105ba6000610b22565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105f59061131f565b80601f01602080910402602001604051908101604052809291908181526020018280546106219061131f565b801561066e5780601f106106435761010080835404028352916020019161066e565b820191906000526020600020905b81548152906001019060200180831161065157829003601f168201915b5050505050905090565b600080610683610876565b9050610690818585610925565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61072a610a9b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361079c5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161079391906110d7565b60405180910390fd5b6107a581610b22565b50565b6107b0610a9b565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f1cf2de25c5bf439ac0287061c3a0fa69b3b02867d0ccfd2ded34e42577050b7360405160405180910390a35050565b600033905090565b61088b8383836001610be8565b505050565b600061089c848461069b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561091f578181101561090f578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161090693929190611350565b60405180910390fd5b61091e84848484036000610be8565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109975760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161098e91906110d7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a095760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a0091906110d7565b60405180910390fd5b610a14838383610dbf565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a8b5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a8291906110d7565b60405180910390fd5b610a9760008383610dbf565b5050565b610aa3610876565b73ffffffffffffffffffffffffffffffffffffffff16610ac16105bc565b73ffffffffffffffffffffffffffffffffffffffff1614610b2057610ae4610876565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b1791906110d7565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c5a5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c5191906110d7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ccc5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610cc391906110d7565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610db9578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610db091906111de565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e11578060026000828254610e0591906113b6565b92505081905550610ee4565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e9d578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e9493929190611350565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f2d5780600260008282540392505081905550610f7a565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fd791906111de565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561101e578082015181840152602081019050611003565b60008484015250505050565b6000601f19601f8301169050919050565b600061104682610fe4565b6110508185610fef565b9350611060818560208601611000565b6110698161102a565b840191505092915050565b6000602082019050818103600083015261108e818461103b565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110c182611096565b9050919050565b6110d1816110b6565b82525050565b60006020820190506110ec60008301846110c8565b92915050565b600080fd5b611100816110b6565b811461110b57600080fd5b50565b60008135905061111d816110f7565b92915050565b6000819050919050565b61113681611123565b811461114157600080fd5b50565b6000813590506111538161112d565b92915050565b600080604083850312156111705761116f6110f2565b5b600061117e8582860161110e565b925050602061118f85828601611144565b9150509250929050565b60008115159050919050565b6111ae81611199565b82525050565b60006020820190506111c960008301846111a5565b92915050565b6111d881611123565b82525050565b60006020820190506111f360008301846111cf565b92915050565b600080600060608486031215611212576112116110f2565b5b60006112208682870161110e565b93505060206112318682870161110e565b925050604061124286828701611144565b9150509250925092565b600060ff82169050919050565b6112628161124c565b82525050565b600060208201905061127d6000830184611259565b92915050565b600060208284031215611299576112986110f2565b5b60006112a78482850161110e565b91505092915050565b600080604083850312156112c7576112c66110f2565b5b60006112d58582860161110e565b92505060206112e68582860161110e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061133757607f821691505b60208210810361134a576113496112f0565b5b50919050565b600060608201905061136560008301866110c8565b61137260208301856111cf565b61137f60408301846111cf565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113c182611123565b91506113cc83611123565b92508282019050808211156113e4576113e3611387565b5b9291505056fea264697066735822122083788b9385bf0f0513a5977bfb808881b7237e69a5b4754034b760e8862ff75164736f6c634300081e0033";

type BALTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BALTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BALToken__factory extends ContractFactory {
  constructor(...args: BALTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_name, _symbol, _owner, overrides || {});
  }
  override deploy(
    _name: string,
    _symbol: string,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_name, _symbol, _owner, overrides || {}) as Promise<
      BALToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BALToken__factory {
    return super.connect(runner) as BALToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BALTokenInterface {
    return new Interface(_abi) as BALTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BALToken {
    return new Contract(address, _abi, runner) as unknown as BALToken;
  }
}
